Spamhaus/JANET feed reporter
============================

This is a basic perl script to extract HELO information from mail
server logs and send it to the JANET slurper, ready to push over
to Spamhaus. It's intended as a stopgap solution for Exim until
Tony Finch's udpsend patch is readily available in distributions,
but could be used for other mail servers that can write arbitrary
information into their log files.

It tails the mailserver log file to look for specific patterns
that contain the required information. This means that the
mailserver has to be configured to output that pattern. An
example for exim is given below.

The pattern is:

<random data>SHF:sender_ip<tab>HELO string<tab>timestamp<tab>RDNS\n

It's expected that <random data> is the log timestamp. Exim can
generate this format in its mainlog with the following; it should
be added at the top of the HELO ACL, before any connections have
been rejected:

--8<-----
acl_helo:

  warn
#   hosts    = ! +relay_hosts
    logwrite = SHF:$sender_host_address\t$sender_helo_name\t$tod_epoch\t$sender_host_name
--8<-----

The "hosts" line is optional - it is a good idea to remove local
IP addresses here to save them going into the log, but otherwise
the script will strip them out given a correctly configured
@ourhosts.


Testing
-------

Having configured the mail logs and checked that SHF: lines are
appearing, the daemon can be tested.

First, open a terminal on the mail system and run either tcpdump
or netcat to see the received packets, for example:

  tcpdump -Xnvi lo -- udp dst port 9999

or

  nc -l -u -p 9999

Secondly, invoke spamhausfeed in debug mode to test:

  ./spamhausfeed -l /srv/log/exim/mainlog -d localhost -p 9999 -D

Note that if you are monitoring using tcpdump and nothing is
listening on the destination port, you are likely to see
'Connection refused' errors. This is not a problem for testing as
long as you see the packets being sent.

For each 'SHF' line appearing in the log file, you should see a
"read" and a "sending" debug line.


Installing
----------

The spamhausfeed script should be copied to /usr/local/sbin, and
spamhausfeed.conf to /etc with the few settings being adjusted for
your own situation.

 - set the location of the exim mainlog*

 - adjust the pidfile if necessary (adjust also the init script)

 - add regular expressions to match your local networks, as these
   should not be reported. This possibly also includes outsourced
   remote systems that relay mail via your servers, depending on
   your circumstances.

 - add regular expressions to match your local domains that should
   not be seen in HELO strings from remote mailers

 - set JANET reporter hostname and port

* if you use exim logfiles in the form mainlog-YYYYMMDD (which I
highly recommend) then you should have a cronjob that points a
symlink to the latest logfile each night; then point this script
at the symlink. An example script that does this is:

--8<-----
#! /bin/sh
# new extension of file is hostname-YYYYMMDD
NE=`hostname -s`-`date +%Y%m%d`
ln -fs /srv/log/exim/main-$NE /srv/log/exim/mainlog
ln -fs /srv/log/exim/reject-$NE /srv/log/exim/rejectlog
--8<-----


Finally, install the init script as /etc/init.d/spamhausfeed, or
wherever your system requires it, and run, for example:

  insserv -vd spamhausfeed

to get the daemon started at boot. Then fire it up.

To check that things are running, use tcpdump such as follows:

  tcpdump -Xnvi eth0 -- udp and host reporting-host.example

When all is sending fine, notify JANET to get your feed checked
and added to the Spamhaus data.


Building Debian package
-----------------------

Edit the spamhausfeed.conf file to suit your local site and update
debian/changelog (e.g. with dch) to indicate your local revisions.
Then build the package as normal, for example:

  dpkg-buildpackage -us -uc -rfakeroot

Remember to add the SHF lines to the mail logs as well as
installing the package.


Matthew Newton
University of Leicester
2013-05-02

$Format:%H% d$
